diff --git a/hack/lib/etcd.sh b/hack/lib/etcd.sh
index 34e8c92373c..d6f3242f882 100755
--- a/hack/lib/etcd.sh
+++ b/hack/lib/etcd.sh
@@ -16,6 +16,8 @@
 
 # A set of helpers for starting/running etcd for tests
 
+set -x
+
 ETCD_VERSION=${ETCD_VERSION:-3.5.6}
 ETCD_HOST=${ETCD_HOST:-127.0.0.1}
 ETCD_PORT=${ETCD_PORT:-2379}
@@ -23,7 +25,7 @@ ETCD_PORT=${ETCD_PORT:-2379}
 # etcd checks that and compains when it is set in addition
 # to the command line argument, even when both have the same value.
 ETCD_LOGLEVEL=${ETCD_LOGLEVEL:-warn}
-export KUBE_INTEGRATION_ETCD_URL="http://${ETCD_HOST}:${ETCD_PORT}"
+export KUBE_INTEGRATION_ETCD_URL="https://${ETCD_HOST}:${ETCD_PORT}"
 
 kube::etcd::validate() {
   # validate if in path
@@ -79,20 +81,24 @@ kube::etcd::start() {
   # validate before running
   kube::etcd::validate
 
-  # Start etcd
+  # Start LSKV
   ETCD_DIR=${ETCD_DIR:-$(mktemp -d 2>/dev/null || mktemp -d -t test-etcd.XXXXXX)}
   if [[ -d "${ARTIFACTS:-}" ]]; then
     ETCD_LOGFILE="${ARTIFACTS}/etcd.$(uname -n).$(id -un).log.DEBUG.$(date +%Y%m%d-%H%M%S).$$"
   else
     ETCD_LOGFILE=${ETCD_LOGFILE:-"/dev/null"}
   fi
-  kube::log::info "etcd --advertise-client-urls ${KUBE_INTEGRATION_ETCD_URL} --data-dir ${ETCD_DIR} --listen-client-urls http://${ETCD_HOST}:${ETCD_PORT} --log-level=${ETCD_LOGLEVEL} 2> \"${ETCD_LOGFILE}\" >/dev/null"
-  etcd --advertise-client-urls "${KUBE_INTEGRATION_ETCD_URL}" --data-dir "${ETCD_DIR}" --listen-client-urls "${KUBE_INTEGRATION_ETCD_URL}" --log-level="${ETCD_LOGLEVEL}" 2> "${ETCD_LOGFILE}" >/dev/null &
+  kube::log::info "Starting LSKV sandbox"
+  /opt/ccf_virtual/bin/sandbox.sh -p /datadrive/git/LSKV/build/liblskv.virtual.so --http2 --node local://127.0.0.1:2379 &
+
+
+  # kube::log::info "etcd --advertise-client-urls ${KUBE_INTEGRATION_ETCD_URL} --data-dir ${ETCD_DIR} --listen-client-urls http://${ETCD_HOST}:${ETCD_PORT} --log-level=${ETCD_LOGLEVEL} 2> \"${ETCD_LOGFILE}\" >/dev/null"
+  # etcd --advertise-client-urls "${KUBE_INTEGRATION_ETCD_URL}" --data-dir "${ETCD_DIR}" --listen-client-urls "${KUBE_INTEGRATION_ETCD_URL}" --log-level="${ETCD_LOGLEVEL}" 2> "${ETCD_LOGFILE}" >/dev/null &
   ETCD_PID=$!
 
   echo "Waiting for etcd to come up."
-  kube::util::wait_for_url "${KUBE_INTEGRATION_ETCD_URL}/health" "etcd: " 0.25 80
-  curl -fs -X POST "${KUBE_INTEGRATION_ETCD_URL}/v3/kv/put" -d '{"key": "X3Rlc3Q=", "value": ""}'
+  kube::util::wait_for_url "${KUBE_INTEGRATION_ETCD_URL}/node/version" "etcd: " 0.25 80
+  curl -k -X POST "${KUBE_INTEGRATION_ETCD_URL}/v3/kv/put" -d '{"key": "X3Rlc3Q=", "value": ""}'
 }
 
 kube::etcd::start_scraping() {
@@ -112,7 +118,8 @@ kube::etcd::start_scraping() {
 }
 
 kube::etcd::scrape() {
-    curl -s -S "${KUBE_INTEGRATION_ETCD_URL}/metrics" > "${ETCD_SCRAPE_DIR}/next" && mv "${ETCD_SCRAPE_DIR}/next" "${ETCD_SCRAPE_DIR}/$(date +%s).scrape"
+    # curl -s -S "${KUBE_INTEGRATION_ETCD_URL}/metrics" > "${ETCD_SCRAPE_DIR}/next" && mv "${ETCD_SCRAPE_DIR}/next" "${ETCD_SCRAPE_DIR}/$(date +%s).scrape"
+    echo "Skip scrape"
 }
 
 
diff --git a/test/integration/etcd/server.go b/test/integration/etcd/server.go
index f8c9455eb10..4967b72093d 100644
--- a/test/integration/etcd/server.go
+++ b/test/integration/etcd/server.go
@@ -25,6 +25,7 @@ import (
 	"strings"
 	"testing"
 	"time"
+	"fmt"
 
 	clientv3 "go.etcd.io/etcd/client/v3"
 
@@ -91,6 +92,8 @@ func StartRealAPIServerOrDie(t *testing.T, configFuncs ...func(*options.ServerRu
 	kubeAPIServerOptions.SecureServing.ServerCert.CertDirectory = certDir
 	kubeAPIServerOptions.ServiceAccountSigningKeyFile = saSigningKeyFile.Name()
 	kubeAPIServerOptions.Etcd.StorageConfig.Transport.ServerList = []string{framework.GetEtcdURL()}
+	// TODO: This should be configurable
+	kubeAPIServerOptions.Etcd.StorageConfig.Transport.TrustedCAFile = "/datadrive/git/LSKV/3rdparty/kubernetes/workspace/sandbox_common/service_cert.pem"
 	kubeAPIServerOptions.Etcd.DefaultStorageMediaType = runtime.ContentTypeJSON // force json we can easily interpret the result in etcd
 	kubeAPIServerOptions.ServiceClusterIPRanges = defaultServiceClusterIPRange.String()
 	kubeAPIServerOptions.Authentication.APIAudiences = []string{"https://foo.bar.example.com"}
diff --git a/test/integration/framework/etcd.go b/test/integration/framework/etcd.go
index 966f6538394..a12900fc781 100644
--- a/test/integration/framework/etcd.go
+++ b/test/integration/framework/etcd.go
@@ -71,7 +71,7 @@ func startEtcd() (func(), error) {
 	}
 
 	etcdURL = env.GetEnvAsStringOrFallback("KUBE_INTEGRATION_ETCD_URL", "http://127.0.0.1:2379")
-	conn, err := net.Dial("tcp", strings.TrimPrefix(etcdURL, "http://"))
+	conn, err := net.Dial("tcp", strings.TrimPrefix(etcdURL, "https://"))
 	if err == nil {
 		klog.Infof("etcd already running at %s", etcdURL)
 		conn.Close()
diff --git a/test/integration/utils.go b/test/integration/utils.go
index 1ca5e3589ef..17e9b46bc30 100644
--- a/test/integration/utils.go
+++ b/test/integration/utils.go
@@ -73,6 +73,7 @@ func GetEtcdClients(config storagebackend.TransportConfig) (*clientv3.Client, cl
 		CertFile:      config.CertFile,
 		KeyFile:       config.KeyFile,
 		TrustedCAFile: config.TrustedCAFile,
+		InsecureSkipVerify: true, // TODO: We should load CCF service certificate here instead
 	}
 
 	tlsConfig, err := tlsInfo.ClientConfig()
